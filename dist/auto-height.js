// Generated by CoffeeScript 1.10.0

/**
 * @version 0.1.0
 * @copyright TWY GmbH [All Rights Reserved]
 * @license MIT License (see LICENSE.txt)
 */

(function() {
    angular.module('twygmbh.auto-height', []).directive('autoHeight', [
        '$window', '$timeout', function($window, $timeout) {
            return {
                link: function($scope, $element, $attrs) {
                    var combineHeights, observe, siblings;
                    observe = function(observedEleId) {
                        if (!observedEleId) {
                            return;
                        }
                        return $timeout(function() {
                            var $observee, observee, observer, oldHeight, options;
                            observee = observedEleId === 'document' ? $window.document : $('#' + observedEleId).get(0);
                            $observee = $(observee);
                            oldHeight = 0;
                            observer = new MutationObserver(function() {
                                var currentHeight;
                                currentHeight = $observee.height();
                                if (currentHeight !== oldHeight) {
                                    angular.element($window).triggerHandler('resize');
                                }
                                return oldHeight = currentHeight;
                            });
                            if (observee) {
                                options = {
                                    attributes: true,
                                    attributeFilter: ['class'],
                                    subtree: true
                                };
                                return observer.observe(observee, options);
                            }
                        });
                    };
                    combineHeights = function(collection) {
                        var heights, i, len, node;
                        heights = 0;
                        for (i = 0, len = collection.length; i < len; i++) {
                            node = collection[i];
                            heights += node.offsetHeight;
                        }
                        return heights;
                    };
                    siblings = function($elm) {
                        var elm, i, len, ref, results;
                        ref = $elm.parent().children();
                        results = [];
                        for (i = 0, len = ref.length; i < len; i++) {
                            elm = ref[i];
                            if (elm !== $elm[0]) {
                                results.push(elm);
                            }
                        }
                        return results;
                    };
                    observe($attrs.observeHeightOf);
                    angular.element($window).bind('resize', function() {
                        var additionalHeight, parentHeight;
                        additionalHeight = $attrs.additionalHeight || 0;
                        parentHeight = $window.innerHeight - $element.parent()[0].getBoundingClientRect().top;
                        return $element.css('height', (parentHeight - combineHeights(siblings($element)) - additionalHeight) + "px");
                    });
                    return $timeout(function() {
                        return angular.element($window).triggerHandler('resize');
                    }, 1000);
                }
            };
        }
    ]);

}).call(this);

//# sourceMappingURL=auto-height.js.map
